#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_THEME: white
#+REVEAL_SLIDE:
#+OPTIONS: toc:nil num:nil
#+DATE: 20240216
#+AUTHOR: Eduardo Robles
#+TITLE: Quick, Easy, Malware Investigations and Threat Hunting

* Bsides Austin 2024
#+begin_center
Quick, Easy, Malware Investigations and Threat Hunting
#+end_center

* About Me
- Hi! I'm Eduardo Robles I work for County of Hidalgo IT dept as a Cybersecurity Analyst IV
- Founder of South Texas Linux Users Group.
- You can check out my skills on my blog or LinkedIn.
* Agenda
1. Learn the basics of Malware Analysis
2. Learn some Threat Hunting skills
3. Small look at Reverse Engineering and Digital Forensics
* Malware Investigations
** Why do internal malware analysis?
- Existing tools Virustotal, JoeSandbox, etc.
- Protect sensitive information from 3rd parties.
- Freedom from reliance on one tool or platform.
** Malware is scary and dangerous, put in a box (container).
Malware is scary. Malware is dangerous. So it's best to analyze in a contained environment.
- Virtual Machines
- Containers (Docker, Podman, etc)
** Working with Malware Samples
Safely moving malware around to later analyze can be daunting. Here are some pointers.
*** Defang
Take a normal hyperlink or file extention and defang it so it's not active.
- Normal
#+begin_example
https://eduardorobles.com or superbadmalware.exe
#+end_example
- Defanged
#+begin_example
hxxps://eduardorobles[.]com or superbadmalware.malz
#+end_example
*** Encrypted Archive with a Password (7zip)
Use 7zip to password encrypt an archive. This add an extra layer of protection by not allowing someone to accidently open the archive.
*** Disable network access
- You can disable network access to your malware analysis station.
- This stops malware from communicating to a C2 infrastruture.
- Or you can also simulate network traffic if you want to analyze what the malware might be trying to communicate with.
** REMnux
If you want easy button for malware analysis use *REMnux* as a VM or a container!
https://remnux.org
#+begin_quote
REMnux: A Linux Toolkit for Malware Analysis
#+end_quote

** Setup REMnux in a Container
REMnux offers several [[https://docs.remnux.org/install-distro/remnux-as-a-container][container]] images as well the full REMnux distro in a container.
- The container technology they chose is Docker but I have chosen to use Podman.
- Podman seems to have better support in Windows as well as Linux.
- So I can have Podman running in both the Malware Analysis station and on my Windows machine. This gives me the flexibility to test on either machine or platform.
*** Install REMnux container
#+begin_src sh
podman pull docker.io/remnux/remnux-distro:focal
#+end_src
*** Run REMnux as a Transient container
#+begin_src sh
  podman run \
         --rm \
         -d \
         --name malContainer \
         -v /var/home/core/SAMPLES:/home/remnux/files \
         --privileged \
         --network none \
         remnux/remnux-distro:focal
#+end_src
What the previous command did
- =--rm= Remove the container after it exists (not the image)
- =-it= Connect the container to the terminal
- =-u remnux= Logged in user (optional)
- =--privileged= Runs container with Root privileges (optional)
- =--network none= Disables any network from the container (optional)
- =remnux/remnux-distro:focal= Container image to use, in this case use the local image
- =bash= Login shell
* Demo
* Digital Forensics
** Phishing Email Analysis
*** ClamAV
ClamAV is great to scan for malware but also can scan =eml= files including email attachments. Use the =--debug= flag for more info on the scan.
#+begin_src sh
clamscan sample.eml
#+end_src
*** Continued
You can also use ClamAV to scan any suspicious file.
#+begin_src sh
clamscan sample.zip
#+end_src

** Investigating a malicious link
To investigate a link REMnux offers so many awesome tools. I will cover THUG and Automater.
*** THUG
THUG is a “honeyclient”. A honeyclient is a tool that mimicks the behavior of a web browser. Useful for analyzing what a link does when a user clicks on it.

#+begin_src sh
thug -u win7chrome49 "https://eduardorobles.com"
#+end_src
*** Continued...
Once it begins to “load” the suspicious site it executes any code that may be on the site. Once it is done running/loading the page it dumps a report. The report contains a summary of what occured plus you get any malicious artifacts that the page may have downloaded.

In one exercise a suspicous page downloaded an executable and I was able to analyze the executable from the container and it was indeed a malicous executable. Yikes!
*** Automater
#+begin_quote
Automater is a URL/Domain, IP Address, and Md5 Hash OSINT tool aimed at making the analysis process easier for intrusion Analysts. Given a target (URL, IP, or HASH) or a file full of targets Automater will return relevant results from sources like the following: IPvoid.com, Robtex.com, Fortiguard.com, unshorten.me, Urlvoid.com, Labs.alienvault.com, ThreatExpert, VxVault, and VirusTotal.
#+end_quote
*** Continued...
Automater is a python tool found in =/usr/local/automater=
#+begin_src sh
  ./Automater.py https://eduardorobles.com
#+end_src


** Investigating a suspicious PDF
Malicous content will be embedded. It's best to extract the content in order to inspect it.

*** Strings
You can use the command =strings= to view all the different system call a file contains.
#+begin_src
strings sus_invoice.pdf | grep http
#+end_src

You can also pipe grep to single out things like ~http~ links or hashes.
*** Magika
#+begin_src
  pip install magika
#+end_src
* Threat Hunting
** Velociraptor
Worth every penny!
** Setup REMnux container for Analysis
This container will run in priviledged mode and will have no network attached to it
#+begin_src sh
  podman run --rm -it \
         --name malContainer \
         --privileged \
         --network none \
         remnux/remnux-distro:focal bash
#+end_src
** Yara
https://github.com/airbnb/binaryalert/blob/master/rules/public/eicar.yara
#+begin_src yara
rule eicar_av_test {
    /*
       Per standard, match only if entire file is EICAR string plus optional trailing whitespace.
       The raw EICAR string to be matched is:
       X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*
    */

    meta:
        description = "This is a standard AV test, intended to verify that BinaryAlert is working correctly."
        author = "Austin Byers | Airbnb CSIRT"
        reference = "http://www.eicar.org/86-0-Intended-use.html"

    strings:
        $eicar_regex = /^X5O!P%@AP\[4\\PZX54\(P\^\)7CC\)7\}\$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!\$H\+H\*\s*$/

    condition:
        all of them
}

rule eicar_substring_test {
    /*
       More generic - match just the embedded EICAR string (e.g. in packed executables, PDFs, etc)
    */

    meta:
        description = "Standard AV test, checking for an EICAR substring"
        author = "Austin Byers | Airbnb CSIRT"

    strings:
        $eicar_substring = "$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!"

    condition:
        all of them
}
#+end_src
** Tools
*** Cyberchef
A great tool!
#+begin_quote
GCHQ CyberChef in a container. CyberChef is the Cyber Swiss Army Knife web app for encryption, encoding, compression and data analysis.
#+end_quote
Let's run it in a container!
#+begin_src sh :async
  podman run \
         -d \
         --name cyberchef \
         -p 8000:8000 \
         mpepping/cyberchef
#+end_src
* Conclusion

* Questions

* Thanks
