#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_THEME: white
#+REVEAL_SLIDE:
#+OPTIONS: toc:nil num:nil
#+DATE: 20240216
#+AUTHOR: Eduardo Robles
#+TITLE: Quick, Easy, Malware Investigations and Threat Hunting

* Quick, Easy, Malware Investigations and Threat Hunting
Learn the basics of Malware Analysis and levarage tools like containers and virtual machines to do your analysis. Sharpen your Threat Hunting skills to better understand threats in your environment. Do all of this with free and open source tools to keep investigation internal and secure.
* About Me
- Hi! I'm Eduardo Robles I work for County of Hidalgo IT dept as a Cybersecurity Analyst IV
- Founder of South Texas Linux Users Group.
- You can check out my skills on my blog or LinkedIn.
* Agenda
1. Learn the basics of Malware Analysis
2. Learn some Threat Hunting skills
3. Small look at Reverse Engineering and Digital Forensics
* Malware Investigations
** Why do internal malware analysis?
- Existing tools Virustotal, JoeSandbox, etc.
- Protect sensitive information from 3rd parties.
- Freedom from reliance on one tool or platform.
** Malware is scary and dangerous, put in a box (container).
Malware is scary. Malware is dangerous. So it's best to analyze in a contained environment.
- Virtual Machines
- Containers (Docker, Podman, etc)
- !IDEA *Read Only* shared storage
** Working with Malware Samples
Safely moving malware around to later analyze can be daunting. Here are some pointers.
- Defang ex. https://eduardorobles.com --> hxxps://eduardorobles[.]com or =superbad.exe= --> =superbad.malz=
- Encrypted Archive with password (7zip)
- Read Only directories
- Disable network access (or simulate network access)
** REMnux
If you want easy button for malware analysis use *REMnux* as a VM or a container!
https://remnux.org
#+begin_quote
REMnux: A Linux Toolkit for Malware Analysis
#+end_quote

** Setup REMnux in a Container
REMnux offers several [[https://docs.remnux.org/install-distro/remnux-as-a-container][container]] images as well the full REMnux distro in a container. The container technology they chose is Docker but I have chosen to use Podman. Podman seems to have better support in Windows as well as Linux. So I can have Podman running in both the Malware Analysis station and on my Windows machine. This gives me the flexibility to test on either machine or platform.
*** Install REMnux container
#+begin_src sh
podman pull docker.io/remnux/remnux-distro:focal
#+end_src
*** Run REMnux as a Transient container
#+begin_src sh :dir /ssh:malVM:
podman run --rm -d --name malContainer -v /var/home/core/SAMPLES:/home/remnux/files --privileged remnux/remnux-distro:focal
#+end_src

#+RESULTS:
: 020095e44926ecf544db82dfe2b3fd02fe5cc984a7e39632293247ac146f9a65

- =--rm= Remove the container after it exists (not the image)
- =-it= Connect the container to the terminal
- =-u remnux= Logged in user
- =remnux/remnux-distro:focal= Container image to use, in this case use the local image
- =bash= Login shell
** Demo
* Digital Forensics
** Phishing Email Analysis
*** ClamAV
ClamAV is great to scan for malware but also can can =eml= files including email attachments. Use the =--debug= flag for more info on the scan.
#+begin_src sh :dir /ssh:malVM|podman:malContainer:/home/remnux/files :results raw
clamscan sample.eml
#+end_src

#+RESULTS:
/home/remnux/files/sample.eml: OK

----------- SCAN SUMMARY -----------
Known viruses: 8698885
Engine version: 0.103.8
Scanned directories: 0
Scanned files: 1
Infected files: 0
Data scanned: 0.00 MB
Data read: 0.00 MB (ratio 0.00:1)
Time: 12.980 sec (0 m 12 s)
Start Date: 2024:10:26 05:53:29
End Date:   2024:10:26 05:53:42
/home/remnux/files/sample.eml: OK


** Investigating a malicious link
To investigate a link REMnux offers so many awesome tools. I will cover THUG, which is a “honeyclient”. A honeyclient is a tool that mimicks the behavior of a web browser. Useful for analyzing what a link does when a user clicks on it.

*Running THUG*

#+begin_src sh :dir /ssh:malVM|podman:malContainer:/home/remnux/files :results raw
thug -u win7chrome49 "https://eduardorobles.com"
#+end_src

#+RESULTS:

Once it begins to “load” the suspicious site it executes any code that may be on the site. Once it is done running/loading the page it dumps a report. The report contains a summary of what occured plus you get any malicious artifacts that the page may have downloaded.

In one exercise I did a suspicous page downloaded an executable and I was able to run the file command from the container to find it was indeed a malicous executable.
*** Continued...
*Running Automater*
#+begin_quote
Automater is a URL/Domain, IP Address, and Md5 Hash OSINT tool aimed at making the analysis process easier for intrusion Analysts.
#+end_quote
Automater is a python tool found in =/usr/local/automater=
#+begin_src sh :dir /ssh:malVM|podman:malContainer:/usr/local/automater :results raw
  ./Automater.py https://eduardorobles.com
#+end_src

#+RESULTS:
____________________     Results found for: https://eduardorobles.com     ____________________
No results found in the FNet URL
No results found in the Un Redirect
[+] IP from URLVoid: No results found
[+] Blacklist from URLVoid: No results found
[+] Domain Age from URLVoid: No results found
[+] Geo Coordinates from URLVoid: No results found
[+] Country from URLVoid: No results found
[+] pDNS data from VirusTotal: No results found
[+] pDNS malicious URLs from VirusTotal: No results found
[+] Malc0de Date: No results found
[+] Malc0de IP: No results found
[+] Malc0de Country: No results found
[+] Malc0de ASN: No results found
[+] Malc0de ASN Name: No results found
[+] Malc0de MD5: No results found
No results found in the THIP
[+] McAfee Web Risk: No results found
[+] McAfee Web Category: No results found
[+] McAfee Last Seen: No results found

** Investigating a suspicious PDF
Malicous content will be embedded. It's best to extract the content in order to inspect it.

* Threat Hunting
** Setup REMnux container for Analysis
This container will route all traffic to the previous container and be managed by the Pod we created earlier
#+begin_src sh
  podman run --rm -it \
         --name malContainer \
         --privileged \
         remnux/remnux-distro:focal bash
#+end_src
* Conclusion

* Questions

* Thanks

* Extra
** Malicious Traffic
- Wireshark
- iNetSim
- Firewalls
- DNS Sinkholes
** Setup capture of malicious traffic
*** TODO https://hub.docker.com/r/0x4d4c/inetsim
Review docs and setup a iNetSim container so traffic can flow to it from our remnux container
*** TODO https://github.com/mandiant/flare-fakenet-ng
Or setup fakenet-ng, experiment and use which ever is easier
** Setup up a Pod
This pod creates the environment where traffic can flow between the containers.
#+begin_src sh
podman pod create --name malInvs --share net -p 4443:443 -p 8043:80 -p 2143:21 -p 5343:53/udp
#+end_src
** Setup router container
This container will receive all the traffic from the REMnux container
#+begin_src sh
  podman run -d --name malTraffic --pod malInvs \
         --restart unless-stopped \
         --privileged \
         --network none \
         -e INETSIM_START_SERVICES=dns,http,https,ftp \
         -e INETSIM_DNS_VERSION="DNS Version" \
         -e INETSIM_FTPS_BIND_PORT=21 \
         -e INETSIM_CREATE_REPORTS=yes \
         -e INETSIM_REPORT_LANGUAGE=en \
         -v $(pwd)/user_configs:/opt/inetsim/conf/user_configs:Z \
         -v $(pwd)/user_configs:/opt/inetsim/log:Z \
         -v $(pwd)/user_configs:/opt/inetsim/report:Z \
         0x4d4c/inetsim
#+end_src
*** TODO Complete the command by finishing the configurations for the container either inetsim or fakenet-ng
** Setup REMnux container for Analysis
This container will route all traffic to the previous container and be managed by the Pod we created earlier
#+begin_src sh
  podman run --rm -it \
         --name malContainer \
         --pod malInvs \
         --requires malTraffic \
         --network container:malTraffic \
         --privileged \
         remnux/remnux-distro:focal bash
#+end_src

*Running Malworeview*
#+begin_src bash
/opt/malwoverview/bin/malwoverview.py
#+end_src
*Config file*
#+begin_src conf
  [VIRUSTOTAL]
  VTAPI =

  [HYBRID-ANALYSIS]
  HAAPI =

  [MALSHARE]
  MALSHAREAPI =

  [HAUSSUBMIT]
  HAUSSUBMITAPI =

  [POLYSWARM]
  POLYAPI =

  [ALIENVAULT]
  ALIENAPI =

  [MALPEDIA]
  MALPEDIAAPI =

  [TRIAGE]
  TRIAGEAPI =

  [INQUEST]
  INQUESTAPI =
#+end_src
** Fedora CoreOS
Lightweight VM for running containers
*** Qemu install
#+begin_src bash
qemu-kvm -m 2048 -cpu host -nographic -snapshot -drive if=virtio,file="/home/erobles/Downloads/fedora-coreos-40.20241006.3.0-qemu.x86_64.qcow2" -fw_cfg name=opt/com.coreos/config,file=/home/erobles/Projects/Configurations/butane/fcore_mal.ign -nic user,model=virtio,hostfwd=tcp::2222-:22
#+end_src
*** Virt Install
#+begin_src bash
virt-install --connect="qemu:///system" --name="fcore_mal" --vcpus="2" --memory="2048" --os-variant="fedora-coreos-stable" --import --graphics=none --disk="size=30,backing_store=/home/erobles/Projects/isos/fedora-coreos-40.20241006.3.0-qemu.x86_64.qcow2" --network bridge=virbr0 --qemu-commandline="-fw_cfg name=opt/com.coreos/config,file=/home/erobles/Projects/Configurations/butane/fcore_mal.ign"
#+end_src
